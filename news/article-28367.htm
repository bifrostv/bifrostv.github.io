<!DOCTYPE html>
<html lang="zh-CN" class="no-js">

<head>
        <link rel="canonical" href="https://bifrostv.github.io/news/article-28367.htm" />
    <meta charset="utf-8" />
    <title>到底什么是消息队列</title>
        <meta name="description" content="最近公司重构订单中心，用到消息中间件，闲暇时间对此进行学习了解，下面是学习内容的总结。 一、什么是消息队列 消息（Message）是指在应用之间传送的数据，消息可以非常简单，比如只包含文本字符串，也可" />
        <link rel="icon" href="/assets/website/img/bifrostv/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <!-- GLOBAL MANDATORY STYLES -->
    <link href="http://fonts.googleapis.com/css?family=Hind:300,400,500,600,700" rel="stylesheet" type="text/css">
    <link href="/assets/website/js/frontend/bifrostv/simple-line-icons/css/simple-line-icons.css" rel="stylesheet" type="text/css" />
    <link href="/assets/website/js/frontend/bifrostv/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- PAGE LEVEL PLUGIN STYLES -->
    <link href="/assets/website/css/bifrostv/animate.css" rel="stylesheet">
    <!-- THEME STYLES -->
    <link href="/assets/website/css/bifrostv/layout.min.css" rel="stylesheet" type="text/css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-VEEJKF77CS"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-VEEJKF77CS');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>


<body id="body" data-spy="scroll" data-target=".header" data-page="detail">
        <!--========== HEADER ==========-->
    <header class="header navbar-fixed-top">
        <!-- Navbar -->
        <nav class="navbar" role="navigation">
            <div class="container">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class="menu-container">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".nav-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="toggle-icon"></span>
                    </button>
                    <!-- Logo -->
                    <div class="logo">
                                                <a class="logo-wrap" href="/">
                            <span>Bifrostv</span>
                        </a>
                                            </div>
                    <!-- End Logo -->
                </div>
                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse nav-collapse">
                    <div class="menu-container">
                        <ul class="nav navbar-nav navbar-nav-right">
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/">首页</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/free-nodes/">免费节点</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/paid-subscribe/">推荐机场</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/news/">新闻资讯</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="#">关于</a></li>
                            <li class="nav-item"><a class="nav-item-child nav-item-hover" href="#">联系</a></li>
                        </ul>
                    </div>
                </div>
                <!-- End Navbar Collapse -->
            </div>
        </nav>
        <!-- Navbar -->
    </header>
    <!--========== END HEADER ==========-->
    <!--========== SLIDER ==========-->
    <div class="promo-block parallax-window" data-parallax="scroll" data-image-src="/assets/website/img/bifrostv/1920x1080/01.jpg">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <div class="promo-block-divider">
                        <h1 class="promo-block-title">到底什么是消息队列</h1>
                        <p class="promo-block-text">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
            </div>
            <!--// end row -->
        </div>
    </div>
    <!--========== SLIDER ==========-->
    <!--========== PAGE LAYOUT ==========-->
    <!-- About -->
    <div id="about">
        <div class="container content-lg">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>最近公司重构订单中心，用到消息中间件，闲暇时间对此进行学习了解，下面是学习内容的总结。<br /> 一、什么是消息队列<br /> 消息（Message）是指在应用之间传送的数据，消息可以非常简单，比如只包含文本字符串，也可以更复杂，可能包含嵌入对象。<br /> 消息队列（Message Queue）是一种应用间的通信方式，消息发送后可以立即返回，有消息系统来确保信息的可靠专递，消息发布者只管把消息发布到MQ中而不管谁来取，消息使用者只管从MQ中取消息而不管谁发布的，这样发布者和使用者都不用知道对方的存在。<br /> 二、为何使用消息队列<br /> 从上面描述中可以看出消息队列是一种应用间的异步协作机制，那什么时候需要使用MQ呢？<br /> 以常见的订单系统为例子，用户点击【下单】按钮后的业务逻辑包括：扣减库存、生成相应的单据、发红包、发短信通知‘在业务发展初期这些逻辑可能放在一起同步执行，随着业务订单量增长，需要提升系统服务的性能，这时候可以将一些不需要立即生效的操作拆分出来异步执行，，比如发红包、发短信通知等。这种场景就可以用MQ，在下单的主流程（比如扣减库存、生成相应的单据）完成之后发送一条消息到MQ让主流程快速完结，而由另外的单独线程拉取MQ的消息（或者由MQ推送消息），当发现MQ中有发红包或者发短信之类的消息，执行相应的业务逻辑。<br /> 以上是用于业务解耦的情况，其他常见场景包括最终一致性、广播、错峰流控等等。<br /> 三、RabbitMQ特点<br /> RabbitMQ是一个由Erlang语言开发的AMQP的开源实现。<br /> AMQP：Advanced Meassage Queue，高级消息队列协议。它是应用层协议的一个开放标准，为面向消息的中间设计，基于此协议的客户端与消息中间件可传递消息，并不受产品、开发语言等条件限制。</p> <p>RabbitMQ最初起源于金融系统，用于分布式系统中存储转发消息，在易用性、扩展性、高可用性等方面表现不俗，具体特点：<br /> 1、可靠性（Reliablitity）<br /> RabbitMQ 使用一些机制来保证可靠性，如持久化、传输确认、发布确认。<br /> 2、灵活的路由（Flexible Routing）<br /> 在消息进入队列之前，通过 Exchange 来路由消息的。对于典型的路由功能，RabbitMQ 已经提供了一些内置的 Exchange 来实现。针对更复杂的路由功能，可以将多个 Exchange 绑定在一起，也通过插件机制实现自己的 Exchange 。<br /> 3、消息集群（Clustering）<br /> 多个 RabbitMQ 服务器可以组成一个集群，形成一个逻辑 Broker 。<br /> 4、高可用（Highly Available Queues）<br /> 队列可以在集群中的机器上进行镜像，使得在部分节点出问题的情况下队列仍然可用。<br /> 5、多种协议（Multi-protocol）<br /> RabbitMQ 支持多种消息队列协议，比如 STOMP、MQTT 等等。<br /> 6、多语言客户端（Many Clients）<br /> RabbitMQ 几乎支持所有常用语言，比如 Java、.NET、Ruby 等等。<br /> 7、管理界面（Management UI）<br /> RabbitMQ 提供了一个易用的用户界面，使得用户可以监控和管理消息 Broker 的许多方面。<br /> 8、跟踪机制（Tracing）<br /> 如果消息异常，RabbitMQ 提供了消息跟踪机制，使用者可以找出发生了什么。<br /> 9、插件机制（Plugin System）<br /> RabbitMQ 提供了许多插件，来从多方面进行扩展，也可以编写自己的插件。</p> <p>四、RabbitMQ中的概念模型<br /> 消息模型<br /> 所有 MQ 产品从模型抽象上来说都是一样的过程：<br /> 消费者（consumer）订阅某个队列。生产者（producer）创建消息，然后发布到队列（queue）中，最后将消息发送到监听的消费者。</p> <p><img decoding="async" alt="这里写图片描述" src="http://img.555519.xyz/uploads/20230109/cb80c1bd0200d71996f0249a1036fec3.jpg"><br /> RabbitMQ 基本概念<br /> 上面只是最简单抽象的描述，具体到 RabbitMQ 则有更详细的概念需要解释。上面介绍过 RabbitMQ 是 AMQP 协议的一个开源实现，所以其内部实际上也是 AMQP 中的基本概念：</p> <p><img decoding="async" alt="这里写图片描述" src="http://img.555519.xyz/uploads/20230109/8f8fba1a0bc2b8b58beb9897a18beefb.jpg"><br /> 1、Message<br /> 消息，消息是不具名的，它由消息头和消息体组成。消息体是不透明的，而消息头则由一系列的可选属性组成，这些属性包括routing-key（路由键）、priority（相对于其他消息的优先权）、delivery-mode（指出该消息可能需要持久性存储）等。<br /> 2、Publisher<br /> 消息的生产者，也是一个向交换器发布消息的客户端应用程序。<br /> 3、Exchange<br /> 交换器，用来接收生产者发送的消息并将这些消息路由给服务器中的队列。<br /> 4、Binding<br /> 绑定，用于消息队列和交换器之间的关联。一个绑定就是基于路由键将交换器和消息队列连接起来的路由规则，所以可以将交换器理解成一个由绑定构成的路由表。<br /> 5、Queue<br /> 消息队列，用来保存消息直到发送给消费者。它是消息的容器，也是消息的终点。一个消息可投入一个或多个队列。消息一直在队列里面，等待消费者连接到这个队列将其取走。<br /> 6、Connection<br /> 网络连接，比如一个TCP连接。<br /> 7、Channel<br /> 信道，多路复用连接中的一条独立的双向数据流通道。信道是建立在真实的TCP连接内地虚拟连接，AMQP 命令都是通过信道发出去的，不管是发布消息、订阅队列还是接收消息，这些动作都是通过信道完成。因为对于操作系统来说建立和销毁 TCP 都是非常昂贵的开销，所以引入了信道的概念，以复用一条 TCP 连接。<br /> 8、Consumer<br /> 消息的消费者，表示一个从消息队列中取得消息的客户端应用程序。<br /> 9、Virtual Host<br /> 虚拟主机，表示一批交换器、消息队列和相关对象。虚拟主机是共享相同的身份认证和加密环境的独立服务器域。每个 vhost 本质上就是一个 mini 版的 RabbitMQ 服务器，拥有自己的队列、交换器、绑定和权限机制。vhost 是 AMQP 概念的基础，必须在连接时指定，RabbitMQ 默认的 vhost 是 / 。<br /> 10、Broker<br /> 表示消息队列服务器实体。</p> <p>五、消息队列的应用及好处</p> <p>例如</p> <p>（1）服务员点菜快，厨师做菜慢，服务员只需要下单给厨师，然后就可以继续去服务顾客，不需要等待厨师把菜做完</p> <p>点菜单就相当于消息，放单子的位置就相当于队列</p> <p>（2）业务系统需要发短信，但短信发送模块速度跟不上，业务系统就可以把发送短信的相关信息封装为一个消息，放入队列，短信发送模块从队列中获取消息进行处理</p> <p>消息队列的好处<br /> （1）提高系统响应速度<br /> 使用消息队列，生产者一方，把消息往消息队列里一扔，就可以立马返回响应用户，无需等待处理结果<br /> （2）保证消息的传递<br /> 如果发送消息时接收者不可用，消息队列会保留消息，直到成功的传递它<br /> （3）解耦<br /> 只要信息格式不变，即使接收者的接口、位置、或者配置改变，也不会给发送者带来任何改变<br /> 消息发送者无需知道消息接收者是谁，使得系统设计更清晰<br /> 为什么需要分布式消息队列<br /> （1）多系统协作需要分布式<br /> 例如消息队列的数据需要在多个系统之间共享，所以需要提供分布式通信机制、协同机制<br /> （2）可靠<br /> 消息会被持久化到分布式存储中，这样避免了单台机器存储的消息由于机器问题导致消息丢失<br /> （3）可扩展<br /> 分布式消息队列，会随着访问量的增加而方便的增加处理服务器<br /> ————————————————<br /> &nbsp;</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-27909.htm">哪里有狗领养（哪里有小狗领养）</a></p>
                                        <p>下一个：<a href="/news/article-28369.htm">中国宠物用品生产基地有哪些（中国宠物用品出口基地）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-28-free-node-subscribe-links.htm" title="11月28日→18.6M/S|2024年最新免费节点BifrosTV订阅链接地址">11月28日→18.6M/S|2024年最新免费节点BifrosTV订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-22-free-subscribe-node.htm" title="10月22日→22.8M/S|2024年最新免费节点BifrosTV订阅链接地址">10月22日→22.8M/S|2024年最新免费节点BifrosTV订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-7-free-subscribe-node.htm" title="12月7日→21.5M/S|2024年最新免费节点BifrosTV订阅链接地址">12月7日→21.5M/S|2024年最新免费节点BifrosTV订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-20976.htm" title="东北农大动物医院电话号码 东北农大动物医院电话号码是多少">东北农大动物医院电话号码 东北农大动物医院电话号码是多少</a></li>
                        <li class="py-2"><a href="/news/article-25584.htm" title="动物诊所英文翻译（动物诊所英文翻译怎么说）">动物诊所英文翻译（动物诊所英文翻译怎么说）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-1-free-node-subscribe-links.htm" title="10月1日→21M/S|2024年最新免费节点BifrosTV订阅链接地址">10月1日→21M/S|2024年最新免费节点BifrosTV订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-26062.htm" title="深入浅出Java线程池原理分析与使用">深入浅出Java线程池原理分析与使用</a></li>
                        <li class="py-2"><a href="/news/article-19596.htm" title="在我的城市里有一家宠物医院用英语怎么说? 在我的城市里有一家宠物医院用英语怎么说谐音">在我的城市里有一家宠物医院用英语怎么说? 在我的城市里有一家宠物医院用英语怎么说谐音</a></li>
                        <li class="py-2"><a href="/news/article-21884.htm" title="MVVM中的数据的刷新">MVVM中的数据的刷新</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-2-free-high-speed-nodes.htm" title="10月2日→21.4M/S|2024年最新免费节点BifrosTV订阅链接地址">10月2日→21.4M/S|2024年最新免费节点BifrosTV订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- End About -->
    <!--========== END PAGE LAYOUT ==========-->
        <!--========== FOOTER ==========-->
    <footer class="footer">
        <div class="content container">
            <div class="row">
                <div class="col-xs-12 text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p class="margin-b-0">
                        <a href="/">BifrosTV机场节点订阅官网</a> 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
            <!--// end row -->
        </div>
    </footer>
    <!--========== END FOOTER ==========-->
    <!-- Back To Top -->
    <a href="javascript:void(0);" class="js-back-to-top back-to-top">Top</a>
    <!-- JAVASCRIPTS(Load javascripts at bottom, this will reduce page load time) -->
    <!-- CORE PLUGINS -->
    <script src="/assets/website/js/frontend/bifrostv/jquery.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery-migrate.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL PLUGINS -->
    <script src="/assets/website/js/frontend/bifrostv/jquery.easing.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.back-to-top.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.smooth-scroll.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.wow.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.parallax.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.appear.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/masonry/jquery.masonry.pkgd.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/masonry/imagesloaded.pkgd.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL SCRIPTS -->
    <script src="/assets/website/js/frontend/bifrostv/layout.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/components/progress-bar.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/components/masonry.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/components/wow.min.js" type="text/javascript"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>


</html>