<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN" class="no-js">

<head>
        <link rel="canonical" href="https://bifrostv.github.io/news/article-75426.htm" />
    <meta charset="utf-8" />
    <title>设计模式：单例模式 C++实现</title>
        <meta name="description" content="文章目录  前言 1. 单例模式的理解 2. 单例模式的C++实现 总结 参考     今天复习最后一个设计模式：单例模式，这也是最常用的模式之一，这里给大家分享下！   单例模式，就是只能创建一个类" />
        <link rel="icon" href="/assets/website/img/bifrostv/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="BifrosTV机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://bifrostv.github.io/news/article-75426.htm" />
    <meta property="og:site_name" content="BifrosTV机场节点订阅官网" />
    <meta property="og:title" content="设计模式：单例模式 C++实现" />
    <meta property="og:image" content="https://bifrostv.github.io/uploads/20240907-1/c0ea0a681017609293d1d9bebe0aa4b2.webp" />
        <meta property="og:release_date" content="2025-03-17T09:39:09" />
    <meta property="og:updated_time" content="2025-03-17T09:39:09" />
        <meta property="og:description" content="文章目录  前言 1. 单例模式的理解 2. 单例模式的C++实现 总结 参考     今天复习最后一个设计模式：单例模式，这也是最常用的模式之一，这里给大家分享下！   单例模式，就是只能创建一个类" />
        
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1" name="viewport" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="设计模式：单例模式 C++实现">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    
    <!-- GLOBAL MANDATORY STYLES -->
    <link href="http://fonts.googleapis.com/css?family=Hind:300,400,500,600,700" rel="stylesheet" type="text/css">
    <link href="/assets/website/js/frontend/bifrostv/simple-line-icons/css/simple-line-icons.css" rel="stylesheet" type="text/css" />
    <link href="/assets/website/js/frontend/bifrostv/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- PAGE LEVEL PLUGIN STYLES -->
    <link href="/assets/website/css/bifrostv/animate.css" rel="stylesheet">
    <!-- THEME STYLES -->
    <link href="/assets/website/css/bifrostv/layout.min.css" rel="stylesheet" type="text/css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-VEEJKF77CS"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-VEEJKF77CS');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>


<body id="body" data-spy="scroll" data-target=".header" data-page="detail">
        <!--========== HEADER ==========-->
    <header class="header navbar-fixed-top">
        <!-- Navbar -->
        <nav class="navbar" role="navigation">
            <div class="container">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class="menu-container">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".nav-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="toggle-icon"></span>
                    </button>
                    <!-- Logo -->
                    <div class="logo">
                                                <a class="logo-wrap" href="/">
                            <span>BifrosTV</span>
                        </a>
                                            </div>
                    <!-- End Logo -->
                </div>
                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse nav-collapse">
                    <div class="menu-container">
                        <ul class="nav navbar-nav navbar-nav-right">
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/">首页</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/free-nodes/">免费节点</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/paid-subscribe/">推荐机场</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/client.htm">客户端</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/news/">新闻资讯</a></li>
                                                    </ul>
                    </div>
                </div>
                <!-- End Navbar Collapse -->
            </div>
        </nav>
        <!-- Navbar -->
    </header>
    <!--========== END HEADER ==========-->
    <!--========== SLIDER ==========-->
    <div class="promo-block parallax-window" data-parallax="scroll" data-image-src="/assets/website/img/bifrostv/1920x1080/01.jpg">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <div class="promo-block-divider">
                        <h1 class="promo-block-title">设计模式：单例模式 C++实现</h1>
                        <p class="promo-block-text">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
            </div>
            <!--// end row -->
        </div>
    </div>
    <!--========== SLIDER ==========-->
    <!--========== PAGE LAYOUT ==========-->
    <!-- About -->
    <div id="about">
        <div class="container content-lg">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#_6" rel="nofollow">前言</a></li> <li><a href="#1__11" rel="nofollow">1. 单例模式的理解</a></li> <li><a href="#2_C_23" rel="nofollow">2. 单例模式的C++实现</a></li> <li><a href="#_122" rel="nofollow">总结</a></li> <li><a href="#_125" rel="nofollow">参考</a></li> </ul> </div> <hr color="#000000" size="1&quot;"/> </h1> <p>今天复习最后一个设计模式：单例模式，这也是最常用的模式之一，这里给大家分享下！</p> <hr color="#000000" size="1&quot;"/> </h1> <p>单例模式，就是只能创建一个类的对象，并且无法通过普通创建对象的方式来获取对象，即<strong>new</strong>一个对象，仅能通过特别的函数获得类的对象。</p> <p>单例模式比较正规的定义与类图（引用《大话设计模式》）如下所示：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220829/5bf7ecfc7d0aba824e17260c6746557b.jpg" alt="设计模式：单例模式 C++实现"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220829/352612c4cdecb8e10e0507bfa4746e7c.jpg" alt="设计模式：单例模式 C++实现"><br /> 注意，单例模式实现是将类的无参构造函数设置为私有访问权限，这样就不能在类外通过new的方式来创建对象。</p> <hr color="#000000" size="1&quot;"/> </h1> <p>这里仅用C++实现单例模式，就不举例实现了，其实可以用单例模式来实现之前介绍过的简单工厂模式中工厂类，感兴趣大家可以自行实现！</p> <p>这里的C++代码实现了<strong>线程安全的单例模式</strong>，所以用到了std::mutex和std::lock_guard类，如果大家不清楚这两个类的用法，可以在网上查找，有很多介绍，这里就不说了。</p> <pre><code class="prism language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;memory&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mutex&gt;</span></span><span class="token comment">//****************Singleton Pattern****************</span><span class="token keyword">class</span><span class="token class-name">Singleton</span><span class="token punctuation">{<!-- --></span><span class="token keyword">private</span><span class="token operator">:</span><span class="token keyword">static</span> Singleton<span class="token operator">*</span> ptrInstance<span class="token punctuation">;</span><span class="token keyword">static</span> std<span class="token operator">::</span>mutex m_mutex<span class="token punctuation">;</span><span class="token function">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token operator">:</span><span class="token keyword">static</span> Singleton<span class="token operator">*</span><span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">if</span><span class="token punctuation">(</span>ptrInstance<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 			std<span class="token operator">::</span>lock_guard<span class="token operator">&lt;</span>std<span class="token operator">::</span>mutex<span class="token operator">&gt;</span><span class="token function">lock</span><span class="token punctuation">(</span>m_mutex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ptrInstance<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				ptrInstance<span class="token operator">=</span><span class="token keyword">new</span><span class="token function">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> ptrInstance<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">~</span><span class="token function">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">if</span><span class="token punctuation">(</span>ptrInstance<span class="token operator">!=</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 			std<span class="token operator">::</span>lock_guard<span class="token operator">&lt;</span>std<span class="token operator">::</span>mutex<span class="token operator">&gt;</span><span class="token function">lock</span><span class="token punctuation">(</span>m_mutex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ptrInstance<span class="token operator">!=</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">delete</span> ptrInstance<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  std<span class="token operator">::</span>mutex Singleton<span class="token operator">::</span>m_mutex<span class="token punctuation">;</span> Singleton<span class="token operator">*</span> Singleton<span class="token operator">::</span>ptrInstance<span class="token operator">=</span><span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token comment">//*********************Test***********************</span><span class="token keyword">int</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	Singleton<span class="token operator">*</span> obj1<span class="token operator">=</span><span class="token class-name">Singleton</span><span class="token operator">::</span><span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	Singleton<span class="token operator">*</span> obj2<span class="token operator">=</span><span class="token class-name">Singleton</span><span class="token operator">::</span><span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>obj1<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 		std<span class="token operator">::</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"obj1 is null"</span><span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span>obj2<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 		std<span class="token operator">::</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"obj1 is null"</span><span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span>obj1<span class="token operator">==</span> obj2<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 		std<span class="token operator">::</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"Single obj1 = obj2"</span><span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{<!-- --></span> 		std<span class="token operator">::</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"Single obj1 != obj2"</span><span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>实现了上述代码，发现很罗嗦，在单例类中声明该单例类的静态对象属性，要在类外定义，还要使用std::mutex和std::lock_guard类实现线程安全，突然想到，如果用下面代码实现线程安全的单例类，不是很简单嘛！</p> <pre><code class="prism language-cpp"><span class="token keyword">class</span><span class="token class-name">Singleton2</span><span class="token punctuation">{<!-- --></span><span class="token keyword">private</span><span class="token operator">:</span><span class="token function">Singleton2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token operator">:</span><span class="token keyword">static</span> Singleton2<span class="token operator">*</span><span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">static</span> Singleton2 instance<span class="token punctuation">;</span><span class="token keyword">return</span><span class="token operator">&amp;</span>instance<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>相比第一版Singleton类，Singleton2类的定义是不是简单很多，惊喜啊！</p> <hr color="#000000" size="1&quot;"/> </h1> <p>单例模式的应用场景还是很多的，至少我接触的项目中基本都用过，用好这个模式还是很有好处的。</p> </h1> <p>《大话设计模式》</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-74750.htm">哪里有领养猫的地方（一般哪里有领养猫狗的地方）</a></p>
                                        <p>下一个：<a href="/news/article-75427.htm">动物医院优质好评文案（宠物医院好评文案）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-1-free-subscribe-node.htm" title="3月1日→18.7M/S|2025年最新免费节点BifrosTV订阅链接地址">3月1日→18.7M/S|2025年最新免费节点BifrosTV订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-70771.htm" title="TypeScript和javascript的区别">TypeScript和javascript的区别</a></li>
                        <li class="py-2"><a href="/news/article-50335.htm" title="南京宠物领养中心有哪些公司（南京宠物狗领养中心）">南京宠物领养中心有哪些公司（南京宠物狗领养中心）</a></li>
                        <li class="py-2"><a href="/news/article-72085.htm" title="长春哪里宠物医院好不贵点（长春最好的宠物医院是哪家）">长春哪里宠物医院好不贵点（长春最好的宠物医院是哪家）</a></li>
                        <li class="py-2"><a href="/news/article-54041.htm" title="疫苗管理人员的年度总结（疫苗管理员汇报情况）">疫苗管理人员的年度总结（疫苗管理员汇报情况）</a></li>
                        <li class="py-2"><a href="/news/article-58638.htm" title="动物疫苗作用原理 动物疫苗作用原理是什么">动物疫苗作用原理 动物疫苗作用原理是什么</a></li>
                        <li class="py-2"><a href="/news/article-68187.htm" title="布偶猫很少有人养（布偶不好养吗）">布偶猫很少有人养（布偶不好养吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-9-free-high-speed-nodes.htm" title="3月9日→21.8M/S|2025年最新免费节点BifrosTV订阅链接地址">3月9日→21.8M/S|2025年最新免费节点BifrosTV订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-23-free-subscribe-node.htm" title="1月23日→22.6M/S|2025年最新免费节点BifrosTV订阅链接地址">1月23日→22.6M/S|2025年最新免费节点BifrosTV订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-59649.htm" title="mysql数据库备份为空_解决JAVA调用mysqldump备份数据库时文件为空的问题">mysql数据库备份为空_解决JAVA调用mysqldump备份数据库时文件为空的问题</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- End About -->
    <!--========== END PAGE LAYOUT ==========-->
        <!--========== FOOTER ==========-->
    <footer class="footer">
        <div class="content container">
            <div class="row">
                <div class="col-xs-12 text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p class="margin-b-0">
                        <a href="/">BifrosTV机场节点订阅官网</a> 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
            <!--// end row -->
        </div>
    </footer>
    <!--========== END FOOTER ==========-->
    <!-- Back To Top -->
    <a href="javascript:void(0);" class="js-back-to-top back-to-top">Top</a>
    <!-- JAVASCRIPTS(Load javascripts at bottom, this will reduce page load time) -->
    <!-- CORE PLUGINS -->
    <script src="/assets/website/js/frontend/bifrostv/jquery.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery-migrate.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL PLUGINS -->
    <script src="/assets/website/js/frontend/bifrostv/jquery.easing.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.back-to-top.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.smooth-scroll.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.wow.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.parallax.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.appear.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/masonry/jquery.masonry.pkgd.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/masonry/imagesloaded.pkgd.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL SCRIPTS -->
    <script src="/assets/website/js/frontend/bifrostv/layout.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/components/progress-bar.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/components/masonry.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/components/wow.min.js" type="text/javascript"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>


</html>