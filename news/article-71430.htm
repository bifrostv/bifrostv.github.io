<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN" class="no-js">

<head>
        <link rel="canonical" href="https://bifrostv.github.io/news/article-71430.htm" />
    <meta charset="utf-8" />
    <title>Java基础|Java8接口新特性</title>
        <meta name="description" content="文章目录  1 接口特性 2 Java8接口-新特性 3 具体用例     接口不是类，不能使用 new 实例化一个接口； 不能构造接口的对象，但可声明接口的变量； 接口变量必须引用实现了接口的类对象" />
        <link rel="icon" href="/assets/website/img/bifrostv/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="BifrosTV机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://bifrostv.github.io/news/article-71430.htm" />
    <meta property="og:site_name" content="BifrosTV机场节点订阅官网" />
    <meta property="og:title" content="Java基础|Java8接口新特性" />
    <meta property="og:image" content="https://bifrostv.github.io/uploads/20240907-1/a42ca36d17b9649015cf987e45751c36.webp" />
        <meta property="og:release_date" content="2025-03-11T07:46:33" />
    <meta property="og:updated_time" content="2025-03-11T07:46:33" />
        <meta property="og:description" content="文章目录  1 接口特性 2 Java8接口-新特性 3 具体用例     接口不是类，不能使用 new 实例化一个接口； 不能构造接口的对象，但可声明接口的变量； 接口变量必须引用实现了接口的类对象" />
        
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1" name="viewport" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Java基础|Java8接口新特性">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    
    <!-- GLOBAL MANDATORY STYLES -->
    <link href="http://fonts.googleapis.com/css?family=Hind:300,400,500,600,700" rel="stylesheet" type="text/css">
    <link href="/assets/website/js/frontend/bifrostv/simple-line-icons/css/simple-line-icons.css" rel="stylesheet" type="text/css" />
    <link href="/assets/website/js/frontend/bifrostv/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- PAGE LEVEL PLUGIN STYLES -->
    <link href="/assets/website/css/bifrostv/animate.css" rel="stylesheet">
    <!-- THEME STYLES -->
    <link href="/assets/website/css/bifrostv/layout.min.css" rel="stylesheet" type="text/css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-VEEJKF77CS"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-VEEJKF77CS');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>


<body id="body" data-spy="scroll" data-target=".header" data-page="detail">
        <!--========== HEADER ==========-->
    <header class="header navbar-fixed-top">
        <!-- Navbar -->
        <nav class="navbar" role="navigation">
            <div class="container">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class="menu-container">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".nav-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="toggle-icon"></span>
                    </button>
                    <!-- Logo -->
                    <div class="logo">
                                                <a class="logo-wrap" href="/">
                            <span>BifrosTV</span>
                        </a>
                                            </div>
                    <!-- End Logo -->
                </div>
                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse nav-collapse">
                    <div class="menu-container">
                        <ul class="nav navbar-nav navbar-nav-right">
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/">首页</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/free-nodes/">免费节点</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/paid-subscribe/">推荐机场</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/client.htm">客户端</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/news/">新闻资讯</a></li>
                                                    </ul>
                    </div>
                </div>
                <!-- End Navbar Collapse -->
            </div>
        </nav>
        <!-- Navbar -->
    </header>
    <!--========== END HEADER ==========-->
    <!--========== SLIDER ==========-->
    <div class="promo-block parallax-window" data-parallax="scroll" data-image-src="/assets/website/img/bifrostv/1920x1080/01.jpg">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <div class="promo-block-divider">
                        <h1 class="promo-block-title">Java基础|Java8接口新特性</h1>
                        <p class="promo-block-text">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
            </div>
            <!--// end row -->
        </div>
    </div>
    <!--========== SLIDER ==========-->
    <!--========== PAGE LAYOUT ==========-->
    <!-- About -->
    <div id="about">
        <div class="container content-lg">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#1__1" rel="nofollow">1 接口特性</a></li> <li><a href="#2_Java8_12" rel="nofollow">2 Java8接口-新特性</a></li> <li><a href="#3__24" rel="nofollow">3 具体用例</a></li> </ul> </div> </h1> <ol> <li>接口不是类，不能使用 new 实例化一个接口；</li> <li>不能构造接口的对象，但可声明接口的变量；</li> <li>接口变量必须引用实现了接口的类对象；</li> <li>可以使用 instanceof 检查一个对象是否实现了某个特定的接口；</li> <li>可以建立类的继承关系一样，接口可以继承接口进行扩展；</li> <li>接口中不能包含实例域或静态方法，但可包含常量；</li> <li>接口中声明的方法自动地设置为 public；</li> <li>接口中的域（即常量）自动地设置为 public static final;</li> </ol> </h1> <ol> <li>静态方法。<br /> JavaSE8 允许在接口中增加<strong>静态方法</strong>；</li> <li>默认方法。<br /> 可以为接口方法提供一个默认实现，必须使用 default 修饰符标记这个方法；</li> <li>解决默认方法冲突问题：<br /> 如果接口中将一个方法定义为默认方法，然后在超类或另一个接口中定义了同样的方法。就要解决冲突，规则如下：<br /> ① 超类优先。如果超类提供了一个具体方法，同名且有相同参数类型的默认方法会被忽略。<br /> ②接口冲突。如果一个超接口提供了一个默认方法，另一个接口提供了一个同名而且参数类型相同的方法，必须覆盖这个方法来解决冲突。<br /> ③类优先原则。如果一个类扩展了一个超类，同时实现了一个接口，并且从超类和接口继承了相同的方法。此种情况使用类优先原则，接口的默认方法会被忽略。</li> </ol> </h1> <p>接口PersonInfo</p> <pre><code class="prism language-java"><span class="token comment">/**  * @version $Id: PersonInfo.java, v 0.1 2017年6月9日 下午5:19:14  */</span> <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">PersonInfo</span> <span class="token punctuation">{<!-- --></span>     <span class="token comment">//方法都自动设置为public</span>     <span class="token keyword">void</span> <span class="token function">printAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//常量自动设置为 public static final</span>     <span class="token class-name">String</span> DEFAULT_NAME <span class="token operator">=</span> <span class="token string">"TIANCI"</span><span class="token punctuation">;</span>      <span class="token keyword">int</span>    DEFAULT_AGE  <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>      <span class="token class-name">String</span> DEFAULT_SEX  <span class="token operator">=</span> <span class="token string">"男"</span><span class="token punctuation">;</span>      <span class="token comment">//javaSE8可以有静态方法</span>     <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>DEFAULT_SEX<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">;</span>      <span class="token comment">//javaSE8 可以为接口方法提供默认实现，default进行标记</span>     <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">printName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>DEFAULT_NAME<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <hr/> <p>接口PersonHobby</p> <pre><code class="prism language-java"><span class="token comment">/**  * @version $Id: PersonHobby.java, v 0.1 2017年6月9日 下午5:41:59  */</span> <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">PersonHobby</span> <span class="token punctuation">{<!-- --></span>     <span class="token class-name">String</span> DEFAULT_HOBBY <span class="token operator">=</span> <span class="token string">"运动"</span><span class="token punctuation">;</span>      <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">printName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"hobby name is:"</span> <span class="token operator">+</span> DEFAULT_HOBBY<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>  </code></pre> <hr/> <p>类Person</p> <pre><code class="prism language-java"><span class="token comment">/**  * Person类实现了两个接口，两个接口中都有默认的实现方法printName()  * 造成冲突，解决冲突的办法就是在类中覆盖这个方法  * 方法具体实现可以是重写，也可以选择调用具体接口的默认实现方法  * @version $Id: Person.java, v 0.1 2017年6月9日 下午5:19:00  */</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token keyword">implements</span> <span class="token class-name">PersonInfo</span><span class="token punctuation">,</span> <span class="token class-name">PersonHobby</span> <span class="token punctuation">{<!-- --></span>      <span class="token keyword">private</span> <span class="token class-name">String</span> age<span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>      <span class="token punctuation">{<!-- --></span>         age <span class="token operator">=</span> <span class="token string">"age init from Person."</span><span class="token punctuation">;</span>         name <span class="token operator">=</span> <span class="token string">"name init form Person."</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">//两个接口都有该方法默认实现，进行覆写来解决冲突</span>     <span class="token comment">//方法具体实现可以是重写，也可以选择调用具体接口的默认实现方法</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">/*调用具体的接口默认实现         PersonInfo.super.printName();*/</span>         <span class="token comment">/* 调用具体的接口默认实现         PersonHobby.super.printName();*/</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <hr/> <p>测试代码</p> <pre><code class="prism language-java"><span class="token comment">/**  * @version $Id: Test.java, v 0.1 2017年6月9日 下午5:45:44  */</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">Person</span> person1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//可以使用接口声明变量,变量必须引用实现了接口的类对象</span>         <span class="token comment">//但对象的能力只拥有声明的接口类型中的能力</span>         <span class="token comment">//如person3和person4没有printAge()的能力</span>         <span class="token class-name">PersonInfo</span> person2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">PersonHobby</span> person3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">PersonHobby</span> person4 <span class="token operator">=</span> person1<span class="token punctuation">;</span>          person1<span class="token punctuation">.</span><span class="token function">printName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         person1<span class="token punctuation">.</span><span class="token function">printAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         person2<span class="token punctuation">.</span><span class="token function">printName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         person2<span class="token punctuation">.</span><span class="token function">printAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         person3<span class="token punctuation">.</span><span class="token function">printName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         person4<span class="token punctuation">.</span><span class="token function">printName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">/*              * 对象的能力只拥有声明的接口类型中的能力          * person3和person4没有printAge()能力，下面方法不可用          * person3.printAge();          * person4.printAge();         */</span>         <span class="token comment">//使用接口调用接口中声明的静态方法</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"----接口中静态方法---"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">PersonInfo</span><span class="token punctuation">.</span><span class="token function">printSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"----访问接口中常量---"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">PersonInfo</span><span class="token punctuation">.</span>DEFAULT_AGE<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">PersonInfo</span><span class="token punctuation">.</span>DEFAULT_NAME<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">PersonInfo</span><span class="token punctuation">.</span>DEFAULT_SEX<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">PersonHobby</span><span class="token punctuation">.</span>DEFAULT_HOBBY<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>测试结果：</p> <pre><code class="prism language-java">name init form <span class="token class-name">Person</span><span class="token punctuation">.</span> age init from <span class="token class-name">Person</span><span class="token punctuation">.</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span> name init form <span class="token class-name">Person</span><span class="token punctuation">.</span> age init from <span class="token class-name">Person</span><span class="token punctuation">.</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span> name init form <span class="token class-name">Person</span><span class="token punctuation">.</span> name init form <span class="token class-name">Person</span><span class="token punctuation">.</span> <span class="token operator">--</span><span class="token operator">--</span>接口中静态方法<span class="token operator">--</span><span class="token operator">-</span> 男 <span class="token operator">--</span><span class="token operator">--</span>访问接口中常量<span class="token operator">--</span><span class="token operator">-</span> <span class="token number">18</span> TIANCI 男 运动 </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-70772.htm">厦门猫咪免费领养中心在哪 厦门猫咪免费领养中心在哪里</a></p>
                                        <p>下一个：<a href="/news/article-71431.htm">人用疫苗和兽用疫苗区别 人用疫苗和兽用疫苗区别在哪</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-18-node-share.htm" title="1月18日→18.4M/S|2025年最新免费节点BifrosTV订阅链接地址">1月18日→18.4M/S|2025年最新免费节点BifrosTV订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-50335.htm" title="南京宠物领养中心有哪些公司（南京宠物狗领养中心）">南京宠物领养中心有哪些公司（南京宠物狗领养中心）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-14-free-high-speed-nodes.htm" title="2月14日→23M/S|2025年最新免费节点BifrosTV订阅链接地址">2月14日→23M/S|2025年最新免费节点BifrosTV订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-37426.htm" title="设计模式学习笔记（十九）观察者模式及应用场景">设计模式学习笔记（十九）观察者模式及应用场景</a></li>
                        <li class="py-2"><a href="/news/article-72084.htm" title="我们如何使用来自任何表达式，函数等的MySQL自我计算输出在一行中插入值？">我们如何使用来自任何表达式，函数等的MySQL自我计算输出在一行中插入值？</a></li>
                        <li class="py-2"><a href="/news/article-42371.htm" title="宠物店一般卖几个月的猫 宠物店一般卖几个月的猫咪">宠物店一般卖几个月的猫 宠物店一般卖几个月的猫咪</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-1-free-subscribe-node.htm" title="2月1日→18.3M/S|2025年最新免费节点BifrosTV订阅链接地址">2月1日→18.3M/S|2025年最新免费节点BifrosTV订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-46332.htm" title="厦门小动物领养中心（厦门小动物救助站地址）">厦门小动物领养中心（厦门小动物救助站地址）</a></li>
                        <li class="py-2"><a href="/news/article-70772.htm" title="厦门猫咪免费领养中心在哪 厦门猫咪免费领养中心在哪里">厦门猫咪免费领养中心在哪 厦门猫咪免费领养中心在哪里</a></li>
                        <li class="py-2"><a href="/news/article-54580.htm" title="HDFS集成Kerberos并使用Python调用">HDFS集成Kerberos并使用Python调用</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">39</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- End About -->
    <!--========== END PAGE LAYOUT ==========-->
        <!--========== FOOTER ==========-->
    <footer class="footer">
        <div class="content container">
            <div class="row">
                <div class="col-xs-12 text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p class="margin-b-0">
                        <a href="/">BifrosTV机场节点订阅官网</a> 版权所有
                        <br />
                        Powered by WordPress
                    </p>
                </div>
            </div>
            <!--// end row -->
        </div>
    </footer>
    <!--========== END FOOTER ==========-->
    <!-- Back To Top -->
    <a href="javascript:void(0);" class="js-back-to-top back-to-top">Top</a>
    <!-- JAVASCRIPTS(Load javascripts at bottom, this will reduce page load time) -->
    <!-- CORE PLUGINS -->
    <script src="/assets/website/js/frontend/bifrostv/jquery.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery-migrate.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL PLUGINS -->
    <script src="/assets/website/js/frontend/bifrostv/jquery.easing.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.back-to-top.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.smooth-scroll.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.wow.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.parallax.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/jquery.appear.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/masonry/jquery.masonry.pkgd.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/masonry/imagesloaded.pkgd.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL SCRIPTS -->
    <script src="/assets/website/js/frontend/bifrostv/layout.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/components/progress-bar.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/components/masonry.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/bifrostv/components/wow.min.js" type="text/javascript"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>


</html>